---
name: Update Homebrew repo (called)
permissions:
  contents: read

on:
  workflow_call:
    secrets:
      GH_EMAIL:
        description: 'Email address for git commits'
        required: true
      GH_TOKEN:
        description: 'GitHub token to use for the workflow.'
        required: true
      GH_USERNAME:
        description: 'Username for git commits'
        required: true

jobs:
  update-homebrew-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Check if Homebrew repo
        id: check-label
        env:
          TOPIC: homebrew-pkg
        uses: actions/github-script@v8
        with:
          script: |
            const topic = process.env.TOPIC;
            console.log(`Checking if repo has topic: ${topic}`);

            const repoTopics = await github.rest.repos.getAllTopics({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            console.log(`Repo topics: ${repoTopics.data.names}`);

            const hasTopic = repoTopics.data.names.includes(topic);
            console.log(`Has topic: ${hasTopic}`);

            core.setOutput('hasTopic', hasTopic);

      - name: Download release asset
        id: download
        if: steps.check-label.outputs.hasTopic == 'true'
        uses: robinraju/release-downloader@v1.12
        with:
          repository: "${{ github.repository }}"
          tag: "${{ github.event.release.tag_name }}"
          fileName: "*.rb"
          tarBall: false
          zipBall: false
          out-file-path: "release_downloads"
          extract: false

      - name: Publish Homebrew Formula
        if: >-
          steps.check-label.outputs.hasTopic == 'true' &&
          fromJson(steps.download.outputs.downloaded_files)[0]
        uses: LizardByte/actions/actions/release_homebrew@v2025.1028.23217
        with:
          formula_file: ${{ fromJson(steps.download.outputs.downloaded_files)[0] }}
          git_email: ${{ secrets.GH_EMAIL }}
          git_username: ${{ secrets.GH_USERNAME }}
          publish: true
          token: ${{ secrets.GH_TOKEN }}
          validate: false
